#!/usr/bin/env python3

# Constraints
# 1 <= n <= 2 x 10^5
# 1 <= d <= n
# 0 <= expenditure[i] <= 200

from sys import stderr

DEBUG = False

def dbg (*s):
    if DEBUG:
        print (*s, file = stderr)

def act_notif (expenditure, d):
    global n
    count = 0
    freq = dict ()

    def median (idx):
        s = 0
        for i in range (200):
            f = 0
            if freq.get (i, None) is not None:
                f = freq[i]
            s += f
            if s >= idx:
                return i

    for i in range (n):
        val = expenditure[i]
        dbg ('I:', i, '- VAL:', val)

        if i >= d:
            med = median (d / 2 + d % 2)
            dbg ('MED:', i, '->', med)

            if d % 2 == 0:
                ret = median (d / 2 + 1)
                if val >= med + ret:
                    count += 1
            else:
                if val >= med * 2:
                    count += 1

        if freq.get (val, None) is None:
            freq[val] = 0
        freq[val] += 1
        dbg ('FREQ:', val, '->', freq[val])

        if i >= d:
            prev = expenditure[i - d]
            dbg ('PREV:', i - d, '->', prev, '->', freq[prev])
            freq[prev] -= 1
            dbg ('FREQ PREV:', prev, '->', freq[prev])

    dbg ('FREQ:', freq)
    return count

n, d = map (int, input ().strip ().split ())
arr = list (map (int, input ().strip ().split ()))

dbg ('N:', n, '- D:', d)
dbg ('ARR:', arr)
print (act_notif (arr, d))
